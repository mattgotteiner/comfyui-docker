name: Docker Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    
env:
  UBUNTU_VERSION: 22.04
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1

jobs:
  nvidia-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        base:
          - "jupyter-pytorch"
        python:
          - "3.10"
        pytorch:
          - "2.2.0"
        cuda:
          - "12.1.0"
        level:
          - "runtime"
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.base }}-${{ matrix.pytorch }}-py${{ matrix.python }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}"

          TAGS="${img_path}:$ver_tag"
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/${{ matrix.base }}:${{ matrix.pytorch }}-py${{ matrix.python }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            IMAGE_TAG=${{ matrix.base }}-${{ matrix.pytorch }}-py${{ matrix.python }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            PYTORCH_VERSION=${{ matrix.pytorch }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}
